#include<stdio.h>
#include<stdlib.h>

struct dll {
    int info;
    struct dll *rptr, *lptr;
};

typedef struct dll node;
node *start = NULL;

node *getnode_dll() {
    node *p;
    p = (node*)malloc(sizeof(node));
    p->lptr = p->rptr = NULL;
    printf("\n enter the info\n");
    scanf("%d", &p->info);
    return p;
}

void insert_front() {
    node *n1;
    n1 = getnode_dll();
    if (start == NULL) {
        start = n1;
        return;
    }
    n1->rptr = start;
    start->lptr = n1;
    start = n1;
}

void insert_end() {
    node *n1, *temp = start;
    n1 = getnode_dll();
    if (start == NULL) {
        start = n1;
        return;
    }
    while (temp->rptr != NULL)
        temp = temp->rptr;
    temp->rptr = n1;
    n1->lptr = temp;
}

void delete_front() {
    node *temp = start;
    if (start == NULL) {
        printf("\n the list is empty\n");
        return;
    }
    start = start->rptr;
    if (start != NULL) {
        start->lptr = NULL;
    }
    printf("\n the deleted element is %d", temp->info);
    free(temp);
}

void delete_end() {
    node *temp = start;
    if (start == NULL) {
        printf("\n the list is empty\n");
        return;
    }
    if (start->rptr == NULL) {
        printf("\n the deleted element is %d\n", start->info);
        free(start);
        start = NULL;
        return;
    }
    while (temp->rptr != NULL)
        temp = temp->rptr;
    (temp->lptr)->rptr = NULL;
    printf("\n the deleted element is %d", temp->info);
    free(temp);
}

void display() {
    node *temp = start;
    int cnt = 0;
    if (start == NULL) {
        printf("\n the list is empty\n");
        return;
    }
    printf("\n the elements in the list are:\n");
    while (temp != NULL) {
        printf("%d\t", temp->info);
        temp = temp->rptr;
        cnt++;
    }
    printf("\n the no of nodes in list are :%d", cnt);
}

int main() {
    int ch;
    while (1) {
        printf("\nenter the choice\n");
        printf("\n1.insert front\t2.insert end\t3.delete begin\t4.delete end\t5.display\n");
        scanf("%d", &ch);
        switch (ch) {
            case 1:
                insert_front();
                break;
            case 2:
                insert_end();
                break;
            case 3:
                delete_front();
                break;
            case 4:
                delete_end();
                break;
            case 5:
                display();
                break;
            default:
                printf("enter the correct choice");
                break;
        }
    }
    return 0;
}
